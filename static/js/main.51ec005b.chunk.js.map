{"version":3,"sources":["List.js","InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["List","list","handleDelete","handleFavorite","length","map","item","className","name","style","color","isFavorite","onClick","id","InputForm","placeholder","value","handleSubmit","handleChange","onSubmit","onChange","App","useState","nameText","setNameText","searchText","setSearchText","currentPage","setCurrentPage","friendsList","setFriendsList","isSortChecked","setIsSortChecked","endIndex","startIndex","filteredList","filter","friend","indexOf","sort","a","b","e","preventDefault","trim","Math","random","alert","event","target","alignSelf","type","checked","htmlFor","slice","window","confirm","tempArray","index","findIndex","listItem","filteredIndex","splice","Array","from","ceil","_","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAgCeA,MA9Bf,YAEI,IAAD,IADDC,YACC,MADM,GACN,MADUC,oBACV,MADyB,aACzB,MADoCC,sBACpC,MADqD,aACrD,EAED,OACEF,GAAQA,EAAKG,OAAS,EACpBH,EAAKI,KAAI,SAAAC,GAAI,OACX,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBD,GAAQA,EAAKE,OACrC,qBAAKD,UAAU,UAAf,+BAEF,wBACEA,UAAU,kBACVE,MAAO,CAAEC,MAAOJ,EAAKK,WAAa,MAAQ,SAC1CC,QAAS,kBAAMT,EAAeG,IAHhC,sBAOA,wBACEM,QAAS,kBAAMV,EAAaI,IAD9B,sBAZyBA,GAAQA,EAAKO,OAmB1C,qBAAKN,UAAU,OAAf,oCCPSO,MAnBf,YAEI,IADFC,EACC,EADDA,YAAaC,EACZ,EADYA,MACZ,IADmBC,oBACnB,MADkC,aAClC,MAD6CC,oBAC7C,MAD4D,aAC5D,EAED,OACE,sBACEX,UAAU,iBACVY,SAAUF,EAFZ,SAIE,uBACEV,UAAU,qBACVS,MAAOA,EACPD,YAAaA,EACbK,SAAUF,OCkHHG,MA5Hf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA0CR,oBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KAEMC,EAAyB,EAAdN,EACXO,EAAaD,EAAW,EAE1BE,EAAeN,EAAYO,QAAO,SAAAC,GACpC,OAA4C,IAArCA,EAAO7B,KAAK8B,QAAQb,MA8D7B,OA5DIM,IACFI,EAAeA,EAAaI,MAAK,SAACC,EAAGC,GAAQ,OAAQD,EAAE7B,YAAc8B,EAAE9B,eA4DvE,sBAAKJ,UAAU,iBAAf,UACE,wBAAQA,UAAU,iBAAlB,0BAGA,cAAC,EAAD,CACEU,aAzDe,SAACyB,GACpBA,EAAEC,iBACEpB,GAAYA,EAASqB,QAAUrB,EAASqB,OAAOxC,OAAS,EAC1D0B,EAAe,GAAD,mBACTD,GADS,CAEZ,CACEhB,GAAIgC,KAAKC,SACTtC,KAAMe,GAAYA,EAASqB,OAC3BjC,YAAY,MAIhBoC,MAAM,qBAERvB,EAAY,KA4CRR,MAAOO,EACPR,YAAY,2BACZG,aAjEmB,SAAC8B,GACxB,IAAMhC,EAASgC,GAASA,EAAMC,QAAUD,EAAMC,OAAOjC,OAAU,GAC/DQ,EAAYR,MAiEV,uBACET,UAAU,UACVS,MAAOS,EACPV,YAAY,uBACZK,SAjDyB,SAAC4B,GAC9BpB,EAAe,GACf,IAAMZ,EAASgC,GAASA,EAAMC,QAAUD,EAAMC,OAAOjC,OAAU,GAC/DU,EAAcV,MAgDZ,sBAAKT,UAAU,iBAAf,UACGsB,EAAYzB,OAAS,GACpB,sBAAKG,UAAU,UAAUE,MAAO,CAAEyC,UAAW,YAA7C,UACE,uBACEC,KAAK,WACLtC,GAAG,iBACHG,MAAOe,EACPX,SA5BW,SAAC4B,GACtBhB,EAAkBgB,GAASA,EAAMC,QAAUD,EAAMC,OAAOG,UAAY,MA6B5D,uBAAOC,QAAQ,iBAAf,iCAEJ,cAAC,EAAD,CACEpD,KAAMkC,EAAamB,MAAMpB,EAAYD,GACrC/B,aA1DmB,SAACI,GAC1B,GAAIiD,OAAOC,QAAQ,gCAAiC,CAClD,IAAMC,EAAS,YAAO5B,GAChB6B,EAAQD,EAAUE,WAAU,SAAAC,GAAQ,OAAIA,EAAS/C,KAAOP,EAAKO,MAC7DgD,EAAgB1B,EAAawB,WAAU,SAAAC,GAAQ,OAAIA,EAAS/C,KAAOP,EAAKO,MAC1EgD,EAAgB,IAAM,GAAO1B,EAAa0B,EAAgB,IAC5DjC,EAA+B,IAAhBD,EAAoB,EAAIA,EAAc,GAEvD8B,EAAUK,OAAOJ,EAAO,GACxB5B,EAAe2B,KAkDXtD,eA9CqB,SAACG,GAC5B,IAAMmD,EAAS,YAAO5B,GACtB4B,EAAUpD,KAAI,SAAAuD,GAIZ,OAHIA,EAAS/C,KAAOP,EAAKO,KACvB+C,EAASjD,YAAciD,EAASjD,YAE3BiD,KAET9B,EAAe2B,MAwCVtB,EAAa/B,OAAS,GACrB,qBAAKG,UAAU,aAAf,SACGwD,MAAMC,KAAK,CAAE5D,OAAQyC,KAAKoB,KAAK9B,EAAa/B,OAAS,KAAM,SAAC8D,EAAGC,GAAJ,OAAUA,EAAI,KACvE9D,KAAI,SAAAC,GAAI,OACP,mBAEEC,UAAWoB,IAAgBrB,EAAO,SAAW,GAC7CM,QAAS,WAAQgB,EAAetB,IAHlC,SAKGA,GAJIA,eCxGR8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.51ec005b.chunk.js","sourcesContent":["import './App.css';\n\nfunction List({\n  list = [], handleDelete = () => { }, handleFavorite = () => { }\n}) {\n\n  return (\n    list && list.length > 0 ?\n      list.map(item => (\n        <div className=\"list\" key={item && item.id}>\n          <div className=\"name-container\">\n            <div className=\"title\">{item && item.name}</div>\n            <div className=\"subtext\">is your friend</div>\n          </div>\n          <button\n            className=\"favorite-button\"\n            style={{ color: item.isFavorite ? 'red' : 'black' }}\n            onClick={() => handleFavorite(item)}\n          >\n            Favorite\n          </button>\n          <button\n            onClick={() => handleDelete(item)}\n          >\n            Delete\n          </button>\n        </div>\n      )) :\n      <div className=\"list\">No Friends List Found</div>\n  )\n}\n\nexport default List;\n","import './App.css';\n\nfunction InputForm({\n  placeholder, value, handleSubmit = () => { }, handleChange = () => { }\n}) {\n\n  return (\n    <form\n      className=\"form-container\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className=\"name-input p-10-20\"\n        value={value}\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n    </form>\n  )\n}\n\nexport default InputForm;\n","import { useState } from 'react';\nimport List from './List';\nimport InputForm from './InputForm';\nimport './App.css';\n\nfunction App() {\n  const [nameText, setNameText] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [friendsList, setFriendsList] = useState([]);\n  const [isSortChecked, setIsSortChecked] = useState(false);\n\n  const endIndex = currentPage * 4;\n  const startIndex = endIndex - 4;\n\n  let filteredList = friendsList.filter(friend => {\n    return friend.name.indexOf(searchText) !== -1;\n  })\n  if (isSortChecked) {\n    filteredList = filteredList.sort((a, b) => { return !a.isFavorite - !b.isFavorite });\n  }\n\n  const handleNameChange = (event) => {\n    const value = (event && event.target && event.target.value) || '';\n    setNameText(value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (nameText && nameText.trim() && nameText.trim().length > 0) {\n      setFriendsList([\n        ...friendsList,\n        {\n          id: Math.random(),\n          name: nameText && nameText.trim(),\n          isFavorite: false\n        }\n      ])\n    } else {\n      alert('Please enter name')\n    }\n    setNameText('')\n  }\n\n  const handleSearchTextChange = (event) => {\n    setCurrentPage(1)\n    const value = (event && event.target && event.target.value) || '';\n    setSearchText(value);\n  }\n\n  const deleteNameFromList = (item) => {\n    if (window.confirm('Are you sure want to delete?')) {\n      const tempArray = [...friendsList];\n      const index = tempArray.findIndex(listItem => listItem.id === item.id)\n      const filteredIndex = filteredList.findIndex(listItem => listItem.id === item.id)\n      if (filteredIndex % 4 === 0 && (!filteredList[filteredIndex + 1])) {\n        setCurrentPage(currentPage === 1 ? 1 : currentPage - 1)\n      }\n      tempArray.splice(index, 1);\n      setFriendsList(tempArray);\n    }\n  }\n\n  const favoriteNameFromList = (item) => {\n    const tempArray = [...friendsList];\n    tempArray.map(listItem => {\n      if (listItem.id === item.id) {\n        listItem.isFavorite = !listItem.isFavorite\n      }\n      return listItem;\n    })\n    setFriendsList(tempArray);\n  }\n\n  const handleCheckbox = (event) => {\n    setIsSortChecked((event && event.target && event.target.checked) || false)\n  }\n\n  return (\n    <div className=\"main-container\">\n      <header className=\"header p-10-20\">\n        Friends list\n      </header>\n      <InputForm\n        handleSubmit={handleSubmit}\n        value={nameText}\n        placeholder=\"Enter your friend's name\"\n        handleChange={handleNameChange}\n      />\n      <input\n        className=\"p-10-20\"\n        value={searchText}\n        placeholder=\"Search friend's name\"\n        onChange={handleSearchTextChange}\n      />\n      <div className=\"list-container\">\n        {friendsList.length > 0 &&\n          <div className=\"p-10-20\" style={{ alignSelf: 'flex-end' }}>\n            <input\n              type=\"checkbox\"\n              id=\"sortByFavorite\"\n              value={isSortChecked}\n              onChange={handleCheckbox}\n            />\n            <label htmlFor=\"sortByFavorite\">Sort By Favorite</label>\n          </div>}\n        <List\n          list={filteredList.slice(startIndex, endIndex)}\n          handleDelete={deleteNameFromList}\n          handleFavorite={favoriteNameFromList}\n        />\n        {filteredList.length > 0 &&\n          <div className=\"pagination\">\n            {Array.from({ length: Math.ceil(filteredList.length / 4) }, (_, i) => i + 1)\n              .map(item =>\n                <a\n                  key={item}\n                  className={currentPage === item ? 'active' : ''}\n                  onClick={() => { setCurrentPage(item) }}\n                >\n                  {item}\n                </a>\n              )}\n          </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}